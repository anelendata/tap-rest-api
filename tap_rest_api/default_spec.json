{
    "application": "tap_rest_api",
    "args":
    {
        "streams":
        {
            "type": "string",
            "default": null,
            "help": "comma-separated strings of tap stream IDs"
        },
        "schema_dir":
        {
            "type": "string",
            "default": "./schema",
            "help": "Path to the schema directory"
        },
        "catalog_dir":
        {
            "type": "string",
            "default": "./catalog",
            "help": "Path to the catalog directory"
        },

        "url":
        {
            "type": "string",
            "default": null,
            "help": "REST API endpoint with {params}. Required in config."
        },

        "auth_method":
        {
            "type": "string",
            "default": "no_auth",
            "help": "HTTP request authentication method: no_auth, basic or digest"
        },

        "http_headers": {
            "type": "string",
            "default": null,
            "help": "JSON-format string of HTTP request headers key-value pairs" },

        "username":
        {
            "type": "string",
            "default": null,
            "help": "username used for authentication if applicable"
        },
        "password":
        {
            "type": "string",
            "default": null,
            "help": "password used for authentication if applicable"
        },

        "offset_start":
        {
            "type": "integer",
            "default": 0,
            "help": "Specify the initial value of current_offset"
        },

        "page_start":
        {
            "type": "integer",
            "default": 0,
            "help": "Specify the initial value of current_page"
        },

        "timestamp_key":
        {
            "type": ["string", "object"],
            "default": null,
            "help": "POSIX timestamp key(column) name. If this is not null, timestamp_key is ignored. Use dictionary to specify per stream."
        },
        "start_timestamp":
        {
            "type": "integer",
            "default": null,
            "help": "Start POSIX timestamp"
        },
        "end_timestamp":
        {
            "type": "integer",
            "default": null,
            "help": "End POSIX timestamp. When this is set, tap only replicates the record with end_timestamp younger than end_timestamp. Once equal or greater than end_datetime is read, the process exits."
        },

        "datetime_key":
        {
            "type": ["string", "object"],
            "default": null,
            "help": "Datetime key(column) name. If this is not null, timestamp_key is ignored. Use dictionary to specify per stream."
        },
        "start_datetime":
        {
            "type": "datetime",
            "default": null,
            "help": "Start datetime in ISO 8601 format. As a convenience, this will be automatically converted to timestamp if datetime_key is null and timestamp_key is set and start_timestamp is null."
        },
        "end_datetime":
        {
            "type": "datetime",
            "default": null,
            "help": "End datetime in ISO 8601 format. When this is set, tap only replicates the record with datetime younger than end_datetime.  Once equal or greater than end_datetime is read, the process exits. As a convenience, this will be automatically converted to timestamp if datetime_key is null and timestamp_key is set and end_timestamp is null."
        },

        "index_key":
        {
            "type": ["string", "object"],
            "default": null,
            "help": "Index key (column) name. Use dictionary to specify per stream."
        },
        "start_index":
        {
            "type": "integer",
            "default": 0,
            "help": "Starting index number"
        },
        "end_index":
        {
            "type": "integer",
            "default": 0,
            "help": "When this is set, tap only replicates the record with index younger than end_index. Once equal or greater than end_index is read, the process exits."
        },

        "items_per_page":
        {
            "type": "integer",
            "default": 100,
            "help": "# of items per page if API supports paging"
        },
        "assume_sorted":
        {
            "type": "boolean",
            "default": true,
            "help": "If true, trust the source data to be presorted by the index/timestamp/datetime keys. So it is safe to finish the replication once the last update index/timestamp/datetime passes the end."
        },
        "max_page":
        {
            "type": "integer",
            "default": null,
            "help": "If set, stop polling after max_page"
        },
        "filter_by_schema":
        {
            "type": "boolean",
            "default": true,
            "help": "Filter the records read from the source according to schema. Any fields not present in shema will be removed."
        },

        "record_list_level":
        {
            "type": "string",
            "default": null,
            "help": "Set this like 'level_1,level_2...' if the target list is at raw_json_response[level_1][level_2]..."
        },
        "record_level":
        {
            "type": "string",
            "default": null,
            "help": "Set this like 'level_a,level_b...' if the target object is at raw_individual_record[level_a][level_b]..."
        }
    }
}
